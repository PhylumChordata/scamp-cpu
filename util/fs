#!/usr/bin/perl

use strict;
use warnings;

use FindBin;
use lib "$FindBin::Bin/lib";

use File::Basename;
use SCAMP::FS;
use Try::Tiny;

$| = 1;

my $diskfile = shift or die "usage: fs DISK\n";

info("loading...");
my $fs = SCAMP::FS->new($diskfile);
info("\n");

my %cmd = (
    help => \&help,
    ll => \&ll,
    ls => \&ls,
    cd => \&cd,
    rm => \&rm,
    mkdir => \&mkdir,
    pwd => \&pwd,
    cat => \&cat,
    get => \&get,
    put => \&put,
    exit => \&done,
    abort => \&abort,
);

info("\$ ");

while (<>) {
    chomp;
    s/^\s*//g;
    s/\s*$//g;
    s/\s+/ /g;

    if ($_ ne '') {
        my @args = split / /;
        if ($cmd{$args[0]}) {
            try {
                $cmd{$args[0]}->(@args[1..$#args]);
            } catch {
                print STDERR "$args[0]: $_";
            };
        } else {
            print STDERR "don't know: $args[0]\n";
        }
    }

    info("\$ ");
}

done();

sub info {
    print STDERR @_ if -t STDIN;
}

sub help {
    print qq{commands:
    help      show this text
    ll        show directory contents, long listing
    ls        show directory contents
    cd DIR    change current directory
    rm NAME   remove the given file or directory
    mkdir DIR create a directory
    pwd       show current directory
    cat FILE  show contents of a file
    get FILE [HOSTFILE] get a file from the image into the host fs
    put HOSTFILE [FILE] put a file into the image from the host fs
    exit      save the disk contents and quit
    abort     quit without saving contents
};
}

sub ll {
    my ($dir) = @_;

    $dir ||= '.';

    for my $name ($fs->ls($dir)) {
        my $type = $fs->nametype("$dir/$name") ? 'f' : 'd';
        my ($blks, $len) = $fs->namelen("$dir/$name");
        print "$type  $len  $blks  $name\n";
    }
}

sub ls {
    my ($dir) = @_;
    print "$_  " for $fs->ls($dir);
    print "\n";
}

sub cd {
    my ($dir) = @_;
    die "usage: cd DIR\n" if !$dir;
    $fs->chdir($dir);
}

sub rm {
    my ($name) = @_;
    die "usage: rm NAME\n" if !$name;
    $fs->unlink($name);
}

sub mkdir {
    my ($dir) = @_;
    die "usage: mkdir DIR\n" if !$dir;
    $fs->mkdir($dir);
}

sub pwd {
    print $fs->cwd, "/\n";
}

sub cat {
    my ($file) = @_;
    print $fs->get($file);
}

sub get {
}

sub put {
    my ($hostfile, $file) = @_;

    print "Read $hostfile...\n";

    open(my $fh, '<', $hostfile)
        or die "can't read $hostfile: $!\n";
    my $str = join('',<$fh>);
    close $fh;

    print "Read " . length($str) . " bytes\n";

    $file ||= basename($hostfile);
    $fs->put($file, $str);
}

sub done {
    info("saving...");
    $fs->save;
    info("\n");
    exit(0);
}

sub abort {
    info("quit without saving!\n");
    exit(0);
}
