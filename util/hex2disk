#!/usr/bin/perl

# read in a 16-bit hex file and output a corresponding 8-bit
# disk image that the bootrom can load into 0x100

use strict;
use warnings;

sub usage {
    my ($rc) = @_;
    print qq{usage: $0 [options] < HEXFILE > DISKFILE

options:
    --start ADDR    Start the OS at the given address (in hex).
};
    exit($rc);
}

my $addr;

use Getopt::Long;
GetOptions(
    'start=s' => \$addr,
    'h|help' => sub { usage(0) },
) or usage(1);

if ($addr) {
    $addr = hex($addr);
} else {
    $addr = 0x100;
}

# initialise magic number (0x5343), start address (0x0100), and placeholder length (0x0000)
my @d = (0x53,0x43, $addr>>8,$addr&0xff, 0x00,0x00);

while (<>) {
    chomp;
    my $v = hex($_);
    push @d, ($v>>8)&0xff;
    push @d, $v&0xff;
}

my $nwords = (@d-6)/2;
$d[4] = ($nwords>>8)&0xff;
$d[5] = $nwords&0xff;

print sprintf("%02x\n", $_) for @d;
