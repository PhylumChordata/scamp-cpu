#!/usr/bin/perl

use strict;
use warnings;

use Time::HiRes qw(usleep);

my $usage = "burn-eeprom-24lc256 DEVICE BINARYFILE\ne.g. \$ burn-eeprom-24lc256 /dev/ttyUSB0 vt100.bin\n";
my $dev = shift or die "usage: $usage";
my $binfile = shift or die "usage: $usage";

# configure serial port
# no idea what the hex numbers mean, I got them from "stty -g" after getting the port into a workable state using Arduino serial monitor
system("stty -F \Q$dev\E 0:0:18b2:0:3:1c:7f:15:4:0:0:0:11:13:1a:0:12:f:17:16:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0:0");
open(my $fh, '+<', $dev)
    or die "can't open $dev: $!\n";

# load bin file
open(my $binfh, '<', $binfile)
    or die "can't read $binfile: $!\n";
my @data = map { ord($_) } split //, join('', <$binfh>);
close $binfh;

burn_eeprom();

sub burn_eeprom {
    my $addr = 0;
    while (1) {
        my $val = $data[$addr];
        last if !defined $val;
        print $fh "write $addr $val\n";
        usleep(12000);
        my $l = <$fh>;
        $l =~ s/[\0\r\n]//g;
        die "write $addr: ($l)\n" if $l ne 'ok';
        my $pct = $addr / @data;
        print STDERR sprintf("   \r%d%%", 100*$pct);
        $addr++;
    }
    print STDERR "\n";
}
